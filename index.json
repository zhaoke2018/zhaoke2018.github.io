[{"authors":["admin"],"categories":null,"content":"Ke Zhao is a second-year Master\u0026rsquo;s student in Department of Electrical and Computer Engineering at NC State University. He is actively seeking full-time entry-level software positions.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://zhao.ke/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Ke Zhao is a second-year Master\u0026rsquo;s student in Department of Electrical and Computer Engineering at NC State University. He is actively seeking full-time entry-level software positions.","tags":null,"title":"Ke Zhao","type":"authors"},{"authors":[],"categories":[],"content":" Github Repo\nIntro This semester(Fall 2019), I am the hourly TA for CSC/ECE/OR 579, which is not the 20 hours/week common TA. So I need to clock in and out on Wolftime inside a website called Mypack Portal for maximum 10 hours/week. If I want the full wage, I have to clock, which is the redundant rule. Usually, I need to click 5 times for clocking in and same for out. Also set the alarm to remind me not to go beyond that 10-hour limit. So how can I automate this process? Language and Tool First, I try to selenium in Python, a portable framework for testing web applications, which can simulate the click. This little script works pretty well, but it needs another file called WebDriver to drive broswer running simulation, which is not easy to find the compatible one. Then, my classmate inspired me, why not Chrome Extension?\nFinally, I found Chrome Extension is a perfect match. It\u0026rsquo;s only some HTML, CSS, and JavaScript, the same as web, which I can handle. It looks like easy, just some click() and sleep(), but there are also some problems. The most important one is click() doesn\u0026rsquo;t work at login and submit the clock sometimes.\nAt \u0026ldquo;login\u0026rdquo;, Chrome reminds me I need to fill in username and password, but they are already there with autofill. So I try to use JaveScript to fill in the form again, which needs users to enter there username and password inside .js file, but it works fine.\nAt \u0026ldquo;submit the clock\u0026rdquo;, sometimes it works but else not. I found out there is an option \u0026ldquo;runAt\u0026rdquo; in chrome.tabs.executeScript, then I can choose to run the click JavaScript at \u0026ldquo;document_end\u0026rdquo;. Finally, it works.\nFeatures WolfTimeHelper can do all the procedure for clock in\u0026amp;out automatically. Users only need to enter how many hour they want to clock. ","date":1570549414,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570549414,"objectID":"e655abd5bcdec2f5a6d49a81e7fca6a4","permalink":"https://zhao.ke/project/wolftimehelper/","publishdate":"2019-10-08T11:43:34-04:00","relpermalink":"/project/wolftimehelper/","section":"project","summary":"Github Repo\nIntro This semester(Fall 2019), I am the hourly TA for CSC/ECE/OR 579, which is not the 20 hours/week common TA. So I need to clock in and out on Wolftime inside a website called Mypack Portal for maximum 10 hours/week. If I want the full wage, I have to clock, which is the redundant rule. Usually, I need to click 5 times for clocking in and same for out.","tags":[],"title":"WolfTimeHelper","type":"project"},{"authors":[],"categories":[],"content":" Updating String finished. 10.07.2019\nReference:\n数据结构与算法/leetcode/lintcode题解\nJava StringBuffer 和 StringBuilder 类\nString vs StringBuffer vs StringBuilder\nString Create String s1 = new String(); String s2 = \u0026quot;kezhao\u0026quot;;  Get Length int s2Len = s2.length();  Substring s2.substring(2, 6); // return \u0026quot;zhao\u0026quot;  Start from 2, end before 6.\nStringBuilder and StringBuffer We need StringBuilder(or StringBuffer) when modify the original String. We know string is immutable in Java, which means when we do String manipulation, it generates a new String and discards the older one for garbage collection.\nIn single-thread environment or we don\u0026rsquo;t care about thread safety, use StringBuilder. In other cases, use StringBuffer.\nStringBuilder s3 = new StringBuilder(s2.substring(2, 6));  Append s3.append(\u0026quot;ke\u0026quot;);  StringBuilder to String String s2New = s3.toString(); // return \u0026quot;zhaoke\u0026quot;  String to Char Array char[] s2Char = s2.toCharArray();  Char at Index char ch = s2.charAt(4); // return 'a'  Find the first char in String int index = s2.indexOf('e'); // return 1. if not found, return -1  ","date":1570505740,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570505740,"objectID":"52581d829ac4911074d6f3d09473e75d","permalink":"https://zhao.ke/post/java-data-structure/","publishdate":"2019-10-07T23:35:40-04:00","relpermalink":"/post/java-data-structure/","section":"post","summary":"Updating String finished. 10.07.2019\nReference:\n数据结构与算法/leetcode/lintcode题解\nJava StringBuffer 和 StringBuilder 类\nString vs StringBuffer vs StringBuilder\nString Create String s1 = new String(); String s2 = \u0026quot;kezhao\u0026quot;;  Get Length int s2Len = s2.length();  Substring s2.substring(2, 6); // return \u0026quot;zhao\u0026quot;  Start from 2, end before 6.\nStringBuilder and StringBuffer We need StringBuilder(or StringBuffer) when modify the original String. We know string is immutable in Java, which means when we do String manipulation, it generates a new String and discards the older one for garbage collection.","tags":[],"title":"Java Data Structure","type":"post"}]