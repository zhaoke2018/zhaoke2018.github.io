[{"authors":["admin"],"categories":null,"content":"Ke Zhao is a second-year Master\u0026rsquo;s student in Department of Electrical and Computer Engineering at NC State University. He is actively seeking full-time entry-level software positions.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://zhao.ke/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Ke Zhao is a second-year Master\u0026rsquo;s student in Department of Electrical and Computer Engineering at NC State University. He is actively seeking full-time entry-level software positions.","tags":null,"title":"Ke Zhao","type":"authors"},{"authors":[],"categories":[],"content":" Updating String finished. 10.07.2019 Reference: 数据结构与算法/leetcode/lintcode题解 Java StringBuffer 和 StringBuilder 类 String vs StringBuffer vs StringBuilder\nString Create \u0026rdquo;\u0026lsquo;java String s1 = new String(); String s2 = \u0026ldquo;kezhao\u0026rdquo;; \u0026ldquo;\u0026rsquo;\nGet Length \u0026rdquo;\u0026lsquo;java int s2Len = s2.length(); \u0026ldquo;\u0026rsquo;\nSubstring \u0026rdquo;\u0026lsquo;java s2.substring(2, 6); // return \u0026ldquo;zhao\u0026rdquo; \u0026ldquo;\u0026rsquo; Start from 2, end before 6.\nStringBuilder and StringBuffer We need StringBuilder(or StringBuffer) when modify the original String. We know string is immutable in Java, which means when we do String manipulation, it generates a new String and discards the older one for garbage collection. In single-thread environment or we don\u0026rsquo;t care about thread safety, use StringBuilder. In other cases, use StringBuffer. \u0026ldquo;\u0026lsquo;java StringBuilder s3 = new StringBuilder(s2.substring(2, 6)); \u0026ldquo;\u0026rsquo;\nAppend \u0026rdquo;\u0026lsquo;java s3.append(\u0026ldquo;ke\u0026rdquo;); \u0026ldquo;\u0026rsquo;\nStringBuilder to String \u0026rdquo;\u0026lsquo;java String s2New = s3.toString(); // return \u0026ldquo;zhaoke\u0026rdquo; \u0026ldquo;\u0026rsquo;\nString to Char Array \u0026rdquo;\u0026lsquo;java char[] s2Char = s2.toCharArray(); \u0026ldquo;\u0026rsquo;\nChar at Index \u0026rdquo;\u0026lsquo;java char ch = s2.charAt(4); // return \u0026lsquo;a\u0026rsquo; \u0026ldquo;\u0026rsquo;\nFind the first char in String int index = s2.indexOf(\u0026lsquo;e\u0026rsquo;); // return 1. if not found, return -1\n","date":1570505740,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570505740,"objectID":"52581d829ac4911074d6f3d09473e75d","permalink":"https://zhao.ke/post/java-data-structure/","publishdate":"2019-10-07T23:35:40-04:00","relpermalink":"/post/java-data-structure/","section":"post","summary":"Updating String finished. 10.07.2019 Reference: 数据结构与算法/leetcode/lintcode题解 Java StringBuffer 和 StringBuilder 类 String vs StringBuffer vs StringBuilder\nString Create \u0026rdquo;\u0026lsquo;java String s1 = new String(); String s2 = \u0026ldquo;kezhao\u0026rdquo;; \u0026ldquo;\u0026rsquo;\nGet Length \u0026rdquo;\u0026lsquo;java int s2Len = s2.length(); \u0026ldquo;\u0026rsquo;\nSubstring \u0026rdquo;\u0026lsquo;java s2.substring(2, 6); // return \u0026ldquo;zhao\u0026rdquo; \u0026ldquo;\u0026rsquo; Start from 2, end before 6.\nStringBuilder and StringBuffer We need StringBuilder(or StringBuffer) when modify the original String. We know string is immutable in Java, which means when we do String manipulation, it generates a new String and discards the older one for garbage collection.","tags":[],"title":"Java Data Structure","type":"post"},{"authors":[],"categories":[],"content":"","date":1570295281,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570295281,"objectID":"9bdd9007c7fdbb810c82eae360dafbaf","permalink":"https://zhao.ke/post/1/","publishdate":"2019-10-05T13:08:01-04:00","relpermalink":"/post/1/","section":"post","summary":"","tags":[],"title":"1","type":"post"}]