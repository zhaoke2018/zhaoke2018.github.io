[{"authors":["admin"],"categories":null,"content":"Ke Zhao is a second-year Master\u0026rsquo;s student in Department of Electrical and Computer Engineering at NC State University. He is actively seeking full-time entry-level software positions.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://zhao.ke/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Ke Zhao is a second-year Master\u0026rsquo;s student in Department of Electrical and Computer Engineering at NC State University. He is actively seeking full-time entry-level software positions.","tags":null,"title":"Ke Zhao","type":"authors"},{"authors":[],"categories":[],"content":" Updating String finished. 10.07.2019\nReference:\n数据结构与算法/leetcode/lintcode题解\nJava StringBuffer 和 StringBuilder 类\nString vs StringBuffer vs StringBuilder\nString Create String s1 = new String(); String s2 = \u0026quot;kezhao\u0026quot;;  Get Length int s2Len = s2.length();  Substring s2.substring(2, 6); // return \u0026quot;zhao\u0026quot;  Start from 2, end before 6.\nStringBuilder and StringBuffer We need StringBuilder(or StringBuffer) when modify the original String. We know string is immutable in Java, which means when we do String manipulation, it generates a new String and discards the older one for garbage collection.\nIn single-thread environment or we don\u0026rsquo;t care about thread safety, use StringBuilder. In other cases, use StringBuffer.\nStringBuilder s3 = new StringBuilder(s2.substring(2, 6));  Append s3.append(\u0026quot;ke\u0026quot;);  StringBuilder to String String s2New = s3.toString(); // return \u0026quot;zhaoke\u0026quot;  String to Char Array char[] s2Char = s2.toCharArray();  Char at Index char ch = s2.charAt(4); // return 'a'  Find the first char in String int index = s2.indexOf('e'); // return 1. if not found, return -1  ","date":1570505740,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570505740,"objectID":"52581d829ac4911074d6f3d09473e75d","permalink":"https://zhao.ke/post/java-data-structure/","publishdate":"2019-10-07T23:35:40-04:00","relpermalink":"/post/java-data-structure/","section":"post","summary":"Updating String finished. 10.07.2019\nReference:\n数据结构与算法/leetcode/lintcode题解\nJava StringBuffer 和 StringBuilder 类\nString vs StringBuffer vs StringBuilder\nString Create String s1 = new String(); String s2 = \u0026quot;kezhao\u0026quot;;  Get Length int s2Len = s2.length();  Substring s2.substring(2, 6); // return \u0026quot;zhao\u0026quot;  Start from 2, end before 6.\nStringBuilder and StringBuffer We need StringBuilder(or StringBuffer) when modify the original String. We know string is immutable in Java, which means when we do String manipulation, it generates a new String and discards the older one for garbage collection.","tags":[],"title":"Java Data Structure","type":"post"}]